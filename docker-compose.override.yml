version: '3.4'

services:

  catalogdb:
    container_name: catalogdb
    restart: always
    volumes:
        - ${WEBAPP_STORAGE_HOME}/site:/data/db
    ports: 
        - "27017:27017"

  basketdb:
    container_name: basketdb
    restart: always
    volumes:
        - ${WEBAPP_STORAGE_HOME}/site:/data/db
    ports: 
        - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  orderdb:
    container_name: orderdb
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "String123"
      ACCEPT_EULA: "Y"

  catalog.api:
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "CatalogDatabaseSettings:ConnectionString=mongodb://catalogdb:27017"

    depends_on:
        - catalogdb
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8000:80"


  basket.api:
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:Redis=basketdb:6379"
        - "EventBus:HostName=rabbitmq"

    depends_on:
        - basketdb
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8001:80"

  ordering.api:
    container_name: orderingapi
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderConnection=Server=orderdb;Database=OrderDb;User Id=sa;Password=String123"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8002:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
